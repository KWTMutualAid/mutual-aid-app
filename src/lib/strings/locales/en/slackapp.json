{
  "channels": {
    "admin": "admin",
    "artAndDesign": "art_and_design",
    "carsAndBikes": "cars_and_bikes",
    "communityRequests": "community_needs",
    "communityRequestsTest": "community_needs_test",
    "intakeVolunteers": "intake_volunteers",
    "deliveryVolunteers": "delivery_volunteers",
    "flyering": "flyer_squad",
    "tech": "tech",
    "communityReimbursements": "community_reimbursement"
  },
  "usergroups": {
    "cars": "cars",
    "bikes": "bikes"
  },
  "modal": {
    "error": {
      "defaultMessage": "Oops got an error",
      "title": "Error :("
    },
    "success": {
      "title": "Done!"
    }
  },
  "home": {
    "base": {
      "welcome": "Welcome to Crown Heights Mutual Aid Slack!\n\nCheck out the quick welcome doc below.\nIt's made with love by neighbors in this Slack ðŸŽ‰ðŸŽ‰ðŸŽ‰",
      "welcomeDocButton": {
        "text": "Welcome Doc",
        "url": "https://docs.google.com/document/d/14eV4UuY1Z78GJ_eRM0rt2ROudAIrfONav4UZP_iknNU/preview"
      }
    },
    "newVolunteer": {
      "message": "Thanks for signing up to volunteer!\n If you want to call neighbors in need, please see if there are any upcoming intake training shifts:",
      "trainingButton": {
        "text": "Upcoming Intake Training",
        "url": "https://docs.google.com/spreadsheets/d/1T7FRsDVbV4Og8wyFN2Afopl9lZ4ojNuXMB5J6ELo_lw/edit#gid=2033187665"
      }
    },
    "trainedVolunteer": {
      "message": "You've been trained for intake! Here are some links for ya:",
      "shiftSignUpButton": {
        "text": "Intake Shift Sign Up",
        "url": "https://docs.google.com/spreadsheets/d/1T7FRsDVbV4Og8wyFN2Afopl9lZ4ojNuXMB5J6ELo_lw/edit"
      },
      "intakeGuideButton": {
        "text": "Intake Guide",
        "url": "https://docs.google.com/document/d/104HjEeFTLt17CGB8Oc31knC4--FDqWyKSidIfekSPr4/preview"
      }
    },
    "volunteerSignUp": {
      "message": "Your Slack email isn't in our volunteer records.\nIf you want to get involved more please fill it out!",
      "formButton": {
        "text": "Volunteering Form",
        "url": "https://airtable.com/shraIzCNdiMwW1bpP"
      },
      "errorMessage": "If you already submitted one, it might take this page a few minutes to update ðŸ’¦ðŸ’¾ðŸ’¾ðŸ’¦"
    }
  },
  "assignDelivery": {
    "error": {
      "noRequest": "We couldn't find a request with that code. Please make sure it exists in the Requests table.",
      "noVolunteer": "No intake volunteer was assigned to the request ID you entered :/",
      "alreadyAssigned": "This request looks like it already has a delivery volunteer!",
      "noPermission": "It doesn't look like you are assigned to this request :/\nLet #tech know if we messed up.",
      "airtableError": "Error updating the Request in Airtable. Please try again.\n\n You can update Airtable and message the delivery volunteer manually if it still doesn't work :/",
      "default": "An error occured. Let us know in #tech"
    },
    "dm": {
      "code": "Request Code",
      "firstName": "First Name",
      "phone": "Phone",
      "crossStreets": "Cross Streets",
      "notes": "Request Notes",
      "message": {
        "default": "Delivery has been assigned!",
        "text": "Thanks to you both for volunteering. Here's some details on the request. Let's help some neighbors!",
        "reminder": "_*Reminder:* When you make a delivery, drop the groceries at the door, step 6 feet away, and make sure that the recipient knows to wipe down all the groceries (or wash with soap and water)_",
        "outro": "*Submit your receipt:* Afterwards, please fill out this handy <{{- reimbursementUrl}}|reimbursement form>, it will automatically post to the #community_reimbursement channel!\n\nFor more info, please see the <{{- guideUrl}}|delivery guide>."
      }
    },
    "postNotify": {
      "message": "{{delivererName}} you're on! You'll get a DM soon with details :slightly_smiling_face:"
    },
    "success": "Delivery assigned!",
    "modal": {
      "manualCode": "Please enter code manually",
      "messageIntro": "You found a delivery volunteer! ðŸŽ‰ðŸŽ‰",
      "message": "If you give us the request code, we'll update all the airtable info and start a DM between you both.",
      "code": "Request Code",
      "dmOption": "Start a DM with request info between you and the assignee",
      "threadOption": "Reply to the thread with confirmation",
      "botOptionText": "Bot Options",
      "title": "Assign to Delivery"
    }
  },
  "editBotPost": {
    "modal": {
      "error": {
        "notAMessage": "This shortcut can only be used on messages.",
        "notBotPost": "You can only edit messages posted by the bot.",
        "noPermission": "You aren't permitted to edit this message.",
        "default": "Failed to update message",
        "deletion": "Error deleting message"
      },
      "success": {
        "update": "The message was successfully updated",
        "deletion": "Message successfully deleted",
        "button": {
          "confirmMessage": "The post cannot be un-deleted and any threads will remain."
        }
      },
      "title": "Edit Post",
      "label": {
        "edit": "You can edit the post's content:",
        "deletion": "Or, if you'd like you can remove the post entirely:"
      },
      "button": {
        "deletion": "Delete Post",
        "confirm": "Are you sure?"
      }
    }
  },
  "needsBotPost": {
    "post": {
      "statusPrefix": {
        "assigned": ":white_check_mark: REQUEST ASSIGNED\n",
        "completed": ":heavy_check_mark:  REQUEST COMPLETED\n",
        "default": ":red_circle:"
      },
      "message": {
        "intro": "A neighbor at {{- streets}} needs your support",
        "outro": "_*Note*: By accepting this request, you're requesting responsibility for completing it._"
      }
    }
  },
  "reimbursementBotPost": {
    "post": {
      "message": {
        "intro": "Hey neighbors!\n:tada::tada: {{- deliverer}} completed a delivery and could use reimbursement! :tada::tada:",
        "outro": "*Want to send money?* Please send any amount to a payment method above and then reply to this post with the amount sent.\nThe bot isn't smart and will register the first number it finds, so please try and only include one dollar amount!\nThis example works fine:\n> Sent 20!"
      },
      "fields": {
        "code": {
          "default": "@chma-admins this request is missing a code!"
        }
      },
      "statusPrefix": {
        "default": ":red_circle:",
        "completed": ":heavy_check_mark: REIMBURSED\n"
      }
    },
    "duplicatePost": {
      "message": "*Duplicate Code!*\n:robot_face::robot_face: There is already a reimbursement post for the code {{- code}}. Here is a link to the original post. If there's an issue, please tag @chma-admins!\n{{- threadLink}}"
    },
    "requestNotFound": {
      "message": "*Request Not Found!*\n :robot_face::robot_face: The request code for a reimbursement didn't exist! If there's an issue, please tag @chma-admins!",
      "noCode": "PaymentRequest has no code :/"
    }
  }
}
